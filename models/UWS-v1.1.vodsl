
model uws (1.1) "Universal Worker Service"
	  
      include "IVOA-v1.0.vodsl"
     
     
     
otype jobInfo "
                  This is arbitrary information that can be added to the
                  job description by the UWS implementation.
               "
    {
       
    }

otype jobs " The list of job references returned at
            /(jobs) The list presented may be affected by the current security context and may be filtered"
    {
       
        jobref: ShortJobDescription  @*   as composition  "" ;
        version: UWSVersion @?  "note that this attribute is actually required by the 1.1 specification - however remains optional in the schema
           for backwards compatibility. It will be formally required in the next major revision.";
    }

otype results " The element returned for
            /{jobs}/{job-id}/results"
    {
       
        result: ResultReference  @*   as composition  "" ;
    }

otype parameters "" 
    {
       
        parameter: Parameter  @*   as composition  "" ;
    }

otype ShortJobDescription  "" //FIXME note as this is effectively only a view - would not be persisted - add option to vodmltools
  {   
        phase: ExecutionPhase   "
                     the execution phase - returned at
                     /{jobs}/{job-id}/phase
                  ";
        runId: ivoa:string  @?   "
                  this is a client supplied identifier - the UWS system
                  does nothing other than to return it as part of the
                  description of the job
               ";
        ownerId: ivoa:string  @?   "
                  the owner (creator) of the job - this should be
                  expressed as a string that can be parsed in accordance
                  with IVOA security standards. If there was no
                  authenticated job creator then this should be set to
                  NULL.
               ";
        creationTime: ivoa:datetime  @?   "
                  The instant at which the job was created.
               ";
        jobid references job   "" ;
  }

         
enum ExecutionPhase  "
            Enumeration of possible phases of job execution
         "
{
PENDING  "
                  The first phase a job is entered into - this is where
                  a job is being set up but no request to run has
                  occurred.
               ",
QUEUED  "
                  A job has been accepted for execution but is waiting
                  in a queue
               ",
EXECUTING  "A job is running",
COMPLETED  "
                  A job has completed successfully
               ",
ERROR  "
                  Some form of error has occurred
               ",
UNKNOWN  "
                  The job is in an unknown state.
               ",
HELD  "
                  The job is HELD pending execution and will not
                  automatically be executed - can occur after a
                  PHASE=RUN request has been made (cf PENDING).
               ",
SUSPENDED  "
                  The job has been suspended by the system during
                  execution
               ",
ABORTED  "
                  The job has been aborted, either by user request or by
                  the server because of lack or overuse of resources.
               ",
ARCHIVED  "
                  The job has been archived by the server at destruction time. An archived job
                  may have deleted the results to reclaim resources, but must have job metadata preserved.
                  This is an alternative that the server may choose in contrast to completely destroying all record of the job.
               "
}


otype JobSummary  "
            The complete representation of the state of a job
         "
  {   
        jobId: ivoa:string iskey  "" ; //FIXME was of type JobIdentifier - would need customtype - or the vodmlTools works out how to JPA annotate primitives...
        runId: ivoa:string  @?   "
                  this is a client supplied identifier - the UWS system
                  does nothing other than to return it as part of the
                  description of the job
               ";
        ownerId: ivoa:string   "
                  the owner (creator) of the job - this should be
                  expressed as a string that can be parsed in accordance
                  with IVOA security standards. If there was no
                  authenticated job creator then this should be set to
                  NULL.
               ";
        phase: ExecutionPhase   "
                  the execution phase - returned at
                  /{jobs}/{job-id}/phase
               ";
        quote: ivoa:datetime  @?   "
                  A Quote predicts when the job is likely to complete -
                  returned at /{jobs}/{job-id}/quote 'don't know' is
                  encoded by setting to the XML null value
                  xsi:nil='true'
               ";
        creationTime: ivoa:datetime  @?   "
                  The instant at which the job was created.
                               
                Note that the version 1.1 of the specification requires that this element be present.
                It is optional only in versions 1.x of the schema for backwards compatibility.
                2.0+ versions of the schema will make this formally mandatory in an XML sense.
               ";
        startTime: ivoa:datetime   "
                  The instant at which the job started execution.
               ";
        endTime: ivoa:datetime   "
                  The instant at which the job finished execution
               ";
        executionDuration: ivoa:integer   "
                  The duration (in seconds) for which the job should be
                  allowed to run - a value of 0 is intended to mean
                  unlimited - returned at
                  /{jobs}/{job-id}/executionduration
               ";
        destruction: ivoa:datetime   "
                  The time at which the whole job + records + results
                  will be destroyed. returned at
                  /{jobs}/{job-id}/destruction
               ";
        parameters: uws:parameters  @? as composition    "
                  The parameters to the job (where appropriate) can also
                  be retrieved at /{jobs}/{job-id}/parameters
               ";

        results: uws:results as  composition   "
                  The results for the job - can also be retrieved at
                  /{jobs}/{job-id}/results
               "; 

        errorSummary: ErrorSummary  @?   as composition  "" ;
        jobInfo: jobInfo @?   as composition  "
                  This is arbitrary information that can be added to the
                  job description by the UWS implementation.
               ";
        version: UWSVersion @?  "note that this attribute is actually required by the 1.1 specification - however remains optional in the schema
           for backwards compatibility. It will be formally required in the next major revision.";
  }

primitive JobIdentifier  -> ivoa:string " The identifier for the job
         "
primitive UWSVersion  -> ivoa:string "The version of the UWS standard that the server complies with."

otype job -> uws:JobSummary // possibly this is unnecessary - was an element in the XML schema
         " This is the information that is returned
            when a GET is made for a single job resource - i.e.
            /{jobs}/{job-id}"
            {
            	
            }
otype ResultReference  " A reference to a UWS result. 
         "
  {   
        id: ivoa:string iskey   "" ;
        size: ivoa:integer @?  "" ;
        mime_type: ivoa:string @?  "" ;//had to change from mime-type
  }

otype ErrorSummary  "
            A short summary of an error - a fuller representation of the
            error may be retrieved from /{jobs}/{job-id}/error
         "
  {   
        message: ivoa:string   "" ;
        type: ErrorType   "
               characterization of the type of the error
            ";
        hasDetail: ivoa:boolean   "if true then there is a more detailed error message available at /{jobs}/{job-id}/error";
  }

enum ErrorType  "" 
{
transient  "" ,
fatal  "" 
}


otype Parameter  " the list of input parameters to the job - if
            the job description language does not naturally have
            parameters, then this list should contain one element which
            is the content of the original POST that created the job.
         "
  {   
        byReference: ivoa:boolean   " if this attribute is true then the
               content of the parameter represents a URL to retrieve the
               actual parameter value.  It is up to the implementation to decide
               if a parameter value cannot be returned directly as the
               content - the basic rule is that the representation of
               the parameter must allow the whole job element to be
               valid XML. If this cannot be achieved then the parameter
               value must be returned by reference.";
        id: ivoa:string iskey  " the identifier for the parameter
            ";
        isPost: ivoa:boolean   "is the original job creation post simply an opaque post that cannot be easily fitted into the parameter model,
          then a single 'parameter' description should be returned with this set to true" ;
  }
